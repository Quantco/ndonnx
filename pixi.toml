[project]
name = "ndonnx"
description = "ONNX backed array library compliant with Array API standard."
channels = ["conda-forge"]
platforms = ["osx-arm64", "osx-64", "linux-64", "linux-aarch64", "win-64"]

[tasks]
postinstall = "pip install --no-build-isolation --no-deps --disable-pip-version-check -e ."

[dependencies]
python = ">=3.10"
numpy = "*"
spox = ">=0.10"
typing_extensions = "*"
onnx = "*"
onnxruntime = ">=1.20"

[host-dependencies]
pip = "*"
setuptools = ">=61"
setuptools-scm = "*"
[feature.docs.dependencies]
make = "*"
numpydoc = "*"
sphinx = "*"
sphinxcontrib-apidoc = "*"
sphinx_rtd_theme = "*"
sphinx-toolbox = "*"
nbsphinx = "*"
[feature.docs.tasks]
docs = "cd docs && make html"

[feature.build.dependencies]
python-build = "*"
[feature.build.tasks]
build-wheel = "python -m build --no-isolation ."

[feature.test.dependencies]
pytest = ">=6"
pytest-cov = "*"
pytest-json-report = "*"
pytest-xdist = "*"
hypothesis = "*"
onnxruntime = "*"
mypy = "*"
ndindex = "*"

[feature.test.tasks]
test = "pytest"
test-coverage = "pytest --cov=ndonnx --cov-report=xml --cov-report=term-missing"

[feature.test.tasks.arrayapitests]
cmd = "pytest array-api-tests/array_api_tests/ -v -rfX --json-report --json-report-file=array-api-tests.json --disable-deadline --disable-extension linalg,fft --skips-file=skips.txt --hypothesis-seed=0 -s"
[feature.test.tasks.arrayapitests.env]
ARRAY_API_TESTS_MODULE="ndonnx"
ARRAY_API_TESTS_VERSION="2023.12"
ARRAY_API_TESTS_SKIP_DTYPES="complex64,complex128"
# Ignored warnings:
# - from ort_compat: warnings about lossy casts
# - "case for": upstream test suite failed to automatically parse special cases
# - "Special cases found for": upstream test suite expected a special case but didn't find it
PYTHONWARNINGS="ignore::UserWarning:ndonnx._typed_array.ort_compat,ignore:case for:UserWarning,ignore:Special cases found for:UserWarning"

[feature.lint.dependencies]
pre-commit = "*"
insert-license-header = "*"
docformatter = "*"
ruff = "*"
prettier = "*"
pre-commit-hooks = "*"
typos = "*"
[feature.lint.tasks]
pre-commit-install = "pre-commit install"
pre-commit-run = "pre-commit run -a"

[feature.py310.dependencies]
python = "3.10.*"
[feature.py311.dependencies]
python = "3.11.*"
[feature.py312.dependencies]
python = "3.12.*"
[feature.np1x.dependencies]
python = "3.11.*"
numpy = "1.*"

[environments]
default = ["test", "lint"]
py310 = ["py310", "test"]
py311 = ["py311", "test"]
py312 = ["py312", "test"]
np1x = ["np1x", "test"]
docs = ["docs"]
build = ["build"]
lint = { features = ["lint"], no-default-feature = true }
